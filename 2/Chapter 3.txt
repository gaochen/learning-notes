第3章 HTTP报文

本章内容
・报文是如何流动的
・HTTP报文的三个组成部分(起始行、首部和实体的主题部分)
・请求和响应报文之间的区别
・请求报文支持的各种功能(方法)
・和响应报文一起返回的各种状态码
・各种各样的HTTP首部都是用来做什么的

3.1 报文流
HTTP报文时在HTTP应用程序之间发送的数据块。这些数据块以一些文本形式的元信息开头，这
些信息描述了报文的内容及含义，后面跟着可选的数据部分。这些报文在客户端、服务器和
代理之间流动。术语“流入”、“流出”、“上游”、“下游”都是用来描述报文方向的

3.1.1 报文流入源端服务器
HTTP使用属于流入和流出来描述事务处理的方向。报文流入源端服务器，工作完成之后，会流
回用户的Agent代理中。

3.1.2 报文向下游流动
不管是请求报文还是响应报文，所有报文都会向下游流动。所有报文的发送者都在接收者的上
游。

3.2 报文的组成部分
HTTP报文是简单的格式化数据块。每条报文都包含一条来自客户端的请求，或者一条来自服务
器的响应。它们由三个部分组成：对报文进行描述的起始行、包含属性的首部块、以及可选的
、包含数据的主体部分。

3.2.1 报文的语法
所有的HTTP报文都可以分为两类：请求报文和响应报文。请求报文会向Web服务器请求一个动
作。响应报文会将请求的结果返回给客户端。请求和响应报文的基本报文结构相同。
请求报文格式:
<method><request-URL><version>
<headers>

<entity-body>
响应报文格式：
<version><status><reason-phrase>
<headers>

<entity-body>
下面是对各部分的简单描述：
・方法(method)：客户端希望服务器对资源执行的动作。是一个单独的词，比如GET、HEAD或
POST。
・请求URL(request-URL)：命名了所请求资源，或者URL路径组件的完整URL。如果直接与服
务器进行对话，只要URL的路径组件是资源的绝对路径，通常就不会有什么问题--服务器可以
假定自己是URL的主机/端口。
・版本(version)：报文所使用的HTTP版本，分为主要版本号(major)和次要版本号(minor)
・状态码(status-code)：这三位数字描述了请求过程中所发生的情况。每个状态码的第一位
数字都用于描述状态的一般类别(“成功”、“出错”等)。
・原因短句(reason-phrase)：数字状态码的可读版本，包含行终止序列之前的所有文本。
・首部(header)：可以有零个或多个首部，每个首部都包含一个名字，后面跟着一个冒号，
然后是一个可选的控股，接着是一个值，最后是一个CRLF。首部是由一个空行(CRLF)结束
的，表示了首部列表的结束和实体主体部分的开始。
・实体的主体部分(entity-body)
实体的主体部分包含一个由任意数据组成的数据块。并不是所有的报文都包含实体的主体
部分，有时，报文只是以一个CRLF结束。

请求报文：
GET /test/hi-there.txt HTTP/1.1
Accept；text/*
Host：www.joes-hardware.com

响应报文：
HTTP/1.0 200 OK 			//起始行
Content-type：text/plain    //首部
Content-length：19
Hi I'm a message!           //主体

3.2.2 起始行
所有的HTTP报文都以一个起始行作为开始。请求报文的起始行说明了要做些什么。响应报文
的起始行说明发生了什么

1.请求行
请求报文的起始行，或称为请求行，请求服务器对资源进行一些操作。包含了一个方法和一个
请求URL。这个方法描述了服务器应该执行的操作，请求URL描述了要对哪个资源执行这个方法。
请求行中还包含HTTP的版本，用来告知服务器，客户端使用的是哪种HTTP，例如：
GTE /test/hi-there.txt HTTP/1.1

2.响应行
响应报文承载了状态信息和操作产生的所有结果数据，将其返回给客户端。响应报文的起始行，
或称为响应行，包含了响应报文使用的HTTP版本、数字状态码，以及描述操作状态的文本
形式的原因短句。例如：
HTTP/1.0 200 OK

3.方法
请求的起始行以方法作为开始，方法用来告知服务器要做些什么。
常用HTTP方法：
・GET：从服务器获取一份文档，无主体
・HEAD：只从服务器获取文档的首部，无主体
・POST：向服务器发送需要处理的数据，有主体
・PUT：将请求的主体部分存储在服务器上，有主体
・TRACE：对可能经过处理服务器传送到服务器上去的报文进行追踪，无主体
・OPTIONS：决定可以在服务器上执行哪些方法，无主体
・DELETE：从服务器上删除一份文档，无主体

4.状态码
状态码则用来告诉客户端，发生了什么事，状态码位于响应的起始行中。
100-101：信息提示
200-206：成功
300-305：重定向
400-415：客户端错误
500-505：服务器错误

常见状态码：
200：OK，成功，请求的所有数据都在响应主体中
401：Unauthorized(未授权)，需要输入用户名和密码
404：Not Found(未找到)，服务器无法找到所请求URL对应的资源

5.原因短句
原因短句是响应起始行中的最后一个组件，它为状态码提供了文本形式的解释。例如
HTTP/1.0 200 OK，OK就是原因短句

6.版本号
版本号会以HTTP/x.y的形式出现在请求和响应报文的起始行中。为HTTP应用程序提供了一种
将自己所遵循的协议版本告知对方的方式。

3.2.3 首部
跟在起始行后面的就是零个、一个或多个HTTP首部字段。本质上只是一些名/值对的列表，如：
Content-length：19

3.2.4 实体的主体部分
HTTP报文的第三部分是可选的实体主体部分。实体的主体是HTTP报文的负荷。就是HTTP要传输
的内容。

3.3 方法 

3.3.1 安全方法
HTTP定义了一组被称为安全方法的方法。GET方法和HEAD方法都被认为是安全方法，这就意味
着使用GET和HEAD方法的HTTP请求都不会产生什么动作。

3.3.2 GET 
GET是最常用的方法。通常用于请求服务器发送某个资源。

3.3.3 HEAD
HEAD方法与GET方法的行为很类似，但服务器在响应中只返回首部。不会返回实体的主体部分

3.3.4 PUT 
PUT方法会向服务器写入文档

3.3.5 POST
POST方法起初是用来向服务器输入数据的。实际上，通常会用它来支持HTML的表单。

3.4 状态码 
3.4.1 100~199 信息性状态码
状态码100，原因短句是Continue，它的目的是对这样的情况进行优化：HTTP客户端应用程序
有一个实体的主体部分要发送给服务器，但希望在发送之前查看一下服务器是否会接受这个实体。
状态码101，原因短句是Switching Protocols，说明服务器正在根据客户端的指定，将协议
切换成Update首部所列的协议

3.4.2 200~299 成功状态码

3.4.3 300~399 重定向状态码

3.4.4 400~499 客户端错误状态码
400：Bad Request，用于告知客户端它发送了一个错误的请求
401：Unauthorized，请求客户端在获取对资源的访问权之前，对自己进行认证。
402：Payment Required，现在这个状态码还未使用，但已经被保留，以作未来之用
403：Forbidden，用于说明请求被服务器拒绝了
404：Not Found，用于说明服务器无法找到所请求的URL
405：Method Not Allowed，发送的请求中带有所有请求的URL不支持的方法
406：Not Acceptable，客户端可以指定参数来说明它们愿意接收什么类型的实体
407：Proxy Authentication Required，与401类型，但用于要求对资源进行认证的代理服务器
408：Request Timeout，客户端请求的时间太长
409：Conflict，用于说明请求可能在资源上引发的一些冲突
410：Gone，与40类似，只是服务器曾经拥有过次资源
411：Length Required，服务器要求在请求报文中包含Content-Length首部时使用
412：Precondition Failed，客户端发起了条件请求，且其中一个条件失败了的时候使用
413：Request Entity Too Large，客户端发送的实体主体部分比服务器能够或希望处理的要大
414：Request URL Too Long，客户端发送给请求的URL比服务器能够或希望处理的要长
415：Unsupported Media Type，服务器无法理解或无法支持客户端所发实体的内容类型
416：Requested Range Not Satisfiable，请求报文所请求的资源范围无法被满足
417：Expectation Failed，请求的Expect首部包含了一个服务器无法满足的期望

3.3.5 500~599 服务器错误状态码
500：Internal Sever Error，服务器遇到一个妨碍它为请求提供服务的错误
501：Not Implement，客户端发起的请求超出服务器的能力范围
502：Bad Gateway，作为代理或网关使用的服务器从请求响应链的吓一跳链路上收到一条伪响应
503：Service Unavailable，用来说明服务器现在无法为请求提供服务
504：Gateway Timeout，响应超时
505：HTTP Version Not Supported，服务器收到无法或不愿支持的协议版本

3.5 首部
















