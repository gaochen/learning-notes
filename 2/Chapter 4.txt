第4章 连接管理

·HTTP是如何使用TCP连接的
·TCP连接的时延、瓶颈以及存在的障碍
·HTTP的优化，包括并行连接、keep-alive(持久连接)和管道化连接
·管理连接时应该以及不应该做的事情

4.1 TCP连接
世界上几乎所有的HTTP通信都是由TCP/IP承载的，TCP/IP是全球计算机及网络设备都在使用的一种
常用的分组交换网络分层协议。客户端应用程序可以打开一条TCP/IP连接，连接到可能运行在世界
任何地方的服务器应用程序。一旦连接建立起来了，在客户端和服务器的计算器交换的报文就永远
不会丢失、受损或失序。

4.1.1 TCP的可靠数据管道
HTTP连接实际上就是TCP连接和一些实用连接的规则。

4.1.2 TCP流失分段的、由IP分组传送
TCP的数据是通过名为IP分组(或IP数据报)的小数据块来发送的。
HTTP网络协议栈：
第一层：HTTP--应用层
第二层：TCP--传输层
第三层：IP--网络层
第四层：网络接口--数据链路层

HTTPS网络协议栈是在上面的TCP传输层之前插入TSL or SSL安全层

HTTP要传送一条报文时，会以流的形式将报文数据的内容通过一条打开的TCP连接按序传输。TCP
收到数据流之后，会将数据流砍成被称作段的小数据块，并将段封装在IP分组中，通过因特网进行
传输。

每个TCP段都是由IP分组承载，从一个IP地址发送到另一个IP地址的。每个IP分组中都包括：
·一个IP分组首部(通常为20字节)
·一个TCP段首部(通常为20字节)
·一个TCP数据块(0个或多个字节)

4.1.3 保持TCP连接的正确运行
在任意时刻计算机都可以有几条TCP连接处于打开状态。TCP是通过端口号来保持所有这些连接
的正确运行的

4.1.4 用TCP套接字编程
操作系统提供了一些操纵其TCP连接的工具。套接字API允许用户创建TCP的端点数据结构，将
这些端点与远程服务器的TCP端点进行连接，并对数据流进行读写。TCP API隐藏了所有底层网络
协议的握手细节，以及TCP数据流与IP分组之间的分段和重装细节。

4.2 对TCP性能的考虑
HTTP紧挨着TCP，位于其上层，所以HTTP事务的性能在很大程度上取决于底层TCP通道的性能。

4.2.1 HTTP事务的时延
HTTP事务的时延有以下几种主要原因：
(1)客户端首先需要根据URI确定Web服务器的IP地址和端口号。如果最近没有对URI中的主机名
进行访问，通过DNS解析系统将URI中的主机名转换成一个IP地址可能要花费数十秒的时间。
(2)接下来，客户端会向服务器发送一条TCP连接请求，并等待服务器回送一个请求接受应答。
每条新的TCP连接都会有连接建立时延。这个值通常最多只有一两秒钟，但如果有数百个HTTP
事务的话，这个值会快速地叠加上去。
(3)一旦连接建立起来了，客户端就会通过新建立的TCP管道来发送HTTP请求。数据到达时，web
服务器会从TCP连接中读取请求报文，并对请求进行处理。因特网传输请求报文，以及服务器处
理请求报文都需要时间。
(4)然后，Web服务器会回送HTTP响应，这也需要花费时间。

这些TCP网络时延的大小取决于硬件速度、网络和服务器的加载、请求和响应报文的尺寸、以及
客户端和服务器之间的距离。TCP协议的技术复杂性也会对时延产生巨大的影响。

4.2.2 性能聚焦区域
一些会对HTTP程序员产生影响的、最常见的TCP相关时延。其中包括：
·TCP连接建立握手
·TCP慢启动拥塞控制
·数据聚集的Nagle算法
·用于捎带确认的TCP延迟确认算法
·TIME_WAIT时延和端口耗尽
详情略

4.3 HTTP连接的处理
从这里开始将解释操作和优化连接的HTTP技术。
我们从HTTP的Connection首部开始介绍，这是HTTP连接管理中一个很容易被误解，但又很重要
的部分。然后会介绍一些HTTP连接优化技术








