第2章 URL与资源

本章内容
·URL语法，以及各种URL组件的含义及其所做的工作
·很多Web客户端都支持的URL快捷方式，包括相对URL和自动扩展URL
·URL编码和字符规则
·支持各种因特网信息系统的常见URL方案
·URL的未来，包括URN--这种框架可以在对象从一处搬移到另一处时，保持
稳定的访问名称

2.1 浏览因特网资源
URL是浏览器寻找信息时所需的资源位置。
URI为资源标识符，URL和URN是它的子集
URL通过资源的位置来标识资源
URN通过资源的名称来标识资源

HTTP应用程序处理的只是URL
比如URL：http://www.joes-hardware.com/seasonal/index-fall.html
该URL分为以下三部分：
·URL的第一部分（http）是URL方案。告知Web客户端怎样访问资源。
·URL的第二部分（www.joes-hardware.com）指的是服务器的位置。这部分
告知Web客户端资源位于何处
·URL的第三部分（/seasonal/index-fall.html）是资源路径。说明了请求
的是服务器上哪个特定的本地资源

2.2 URL的语法
URL提供了一种定位因特网上任意资源的手段，但这些资源可以通过不同的
方案（比如HTTP,FTP,SMTP）来访问的，不同方案的语法也不同
大多数URL方案的语法由9部分组成：
·方案
·用户
·密码
·主机
·端口
·路径
·参数
·查询
·片段

其中最重要的3个是方案，主机，路径

2.2.1 方案--使用什么协议
方案实际上是规定如何访问指定资源的主要标识符，它会告诉负责解析URL
的应用程序应该使用什么协议。
方案组件必须以一个字母符号开始，由第一个“：”符号将其与URL的其余部分
分隔开来，方案名不区分大小写

2.2.2 主机与端口
主机组件标识了因特网上能够访问资源的宿主机器，可以用主机名或者IP地址
表示主机名。
端口组件标识了服务器正在监听的网络端口。对下层使用了TCP协议的HTTP来
说，默认端口号为80。

2.2.3 用户名和密码
很多服务器都要求输入用户名和密码才会允许用户访问数据
用户名和密码两者之间由字符“:”分隔
用户名和密码组件与URL的其余部分以“@”分隔
例如：ftp:anonymous:my_passwd@ftp.prep.ai.mit.edu/pub/gnu

2.2.4 路径
路径组件说明了资源位于服务器的什么地方

2.2.5 参数
参数组件是为了向应用程序提供它们所需的输入参数，以便正确地与服务器进
行交互。它是URL中的名值对列表，由字符“;”将其与URL的其余部分分隔开

2.2.6 查询字符串
很多资源，比如数据库服务，都是可以通过提问题或进行查询来缩小所请求
资源类型范围的
比如: http://www.joes-hardware.com/inventory-check.cgi?item=12731
问号(?)右边的内容是新出现的，这部分被称为查询(query)组件。
按照常规，查询字符串以一系列“名/值”对的形式出现，名值对之间用字符“&”分隔

2.2.7 片段
为了引用部分资源或资源的一个片段，URL支持使用片段(frag)组件来表示一个
资源内部的片段。比如，URL可以指向HTML文档中一个特定的图片或小姐。
片段挂在URL的右手边，最前面有一个字符“#”。
HTTP服务器通常只处理整个对象，而不是对象的片段。因此，浏览器获得整个
对象资源之后，会根据片段来显示你感兴趣的那部分资源

2.3 URl快捷方式
Web客户端可以理解并使用几种URL快捷方式

2.3.1 相对URL
URL有两种方式：绝对的和相对的。
绝对URL包含有访问资源所需的全部信息
相对URL是不完整的，需要相对于被称为其基础的URL进行解析
类似于<img src="../iamge/1.jpg" />
1.基础URL
转换处理的第一步就是找到基础URL，可以来自以下几个不同地方：
 ·在资源中显式提供
 ·封装资源的基础URL
 ·没有基础URL
2.解析相对引用












