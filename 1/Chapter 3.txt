第1章 基本概念

本章内容
·语法
·数据类型
·流控制语句
·函数

3.1 语法
3.1.1 区分大小写
ECMAScript中的一切(变量、函数名和操作符)都区分大小写。

3.1.2 标识符
标识符是指变量、函数、属性的名字，或者函数的参数。规则如下：
·第一个字符必须是一个字母、下划线(_)或一个美元符号($)
·其他字符可以是字母、下划线、美元符号或数字
标识符推荐使用驼峰大小格式，也就是第一个字母小写，剩下的每个单词的首字母大写。

3.1.4 严格模式
在代码顶部添加如下代码：
"use strict"
在函数内部的上方包含这条代码，也可以指定函数在严格模式下执行：
function doSomething() {
	"use strict";
	//函数体
}
兼容性：IE10+

3.2 关键字和保留字
关键字可用于表示控制语句的开始或结束，或者用于执行特定操作等。关键字也是语句保留的，不能用作标识符。
保留字也不能用作标识符，它们有可能在将来被用作关键字

3.3 变量
ECMAScript的变量是松散类型的，即可以用来保存任何类型的数据。
var message;	未经初始化的变量会保存一个特殊值undefined

3.4 数据类型
5种简单数据类型(基础数据类型)：Undefined、Null、Boolean、Number和String。
1种复杂数据类型：Object，Object本质上是由一组无序的名值对组成。

3.4.1 typeof操作符
用于检测给定变量的数据类型
"undefined" -- 如果这个值未定义
"boolean" -- 如果这个值是布尔值
"string" -- 如果这个值是字符串
"number" -- 如果这个值是数值
"object" -- 如果这个值是对象或null
"function" -- 如果这个值是函数
特例：typeof null -> object，特殊值null被认为是一种空的对象引用。

3.4.2 Undefined类型
Undefined类型只有一个值，即特殊的undefined。在使用var声明变量但是未对其加以初始化时，这个变量的值就是undefined。
若变量未被声明，则会导致一个错误

3.4.3 Null类型
Null类型是第二个只有一个值得数据类型，这个特殊值是null。从逻辑角度来看，null值表示一个空对象指针，而这也正是
typeof操作符检测null值时会返回"object"的原因。
如果定义的变量准备在将来用于保存对象，那么最好将该变量初始化为null而不是其他值。
实际上，undefined值是派生自null值得，因此ECMA-262规定对它们的相等性测试要返回true:
alert(null == undefined)	// true



